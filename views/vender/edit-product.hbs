
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Responsive vender Dashboard</title>
    <!-- ======= Styles ====== -->
    <link rel="stylesheet" href="dashboard.css" />
    <lin
      rel="shortcut icon"
      type="image/png"
      href="./assets/imgs/favicon.ico"
    />
  </head>

  <body>
    <!-- =============== Navigation ================ -->
    <div class="container">
      <div class="navigation">
        <ul>
          <li>
            <a href="#">
              <span class="icon">
                <img src="./assets/imgs/favicon.ico" alt="" />
              </span>
              <span class="title">Dunprel Store</span>
            </a>
          </li>

          <li>
            <a href="/vender/main">
              <span class="icon">
                <ion-icon name="home-outline"></ion-icon>
              </span>
              <span class="title">Dashboard</span>
            </a>
          </li>

          <li>
            <a href="/vender/productdetails">
              <span class="icon">
                <ion-icon name="people-outline"></ion-icon>
              </span>
              <span class="title">ProductDeatails</span>
            </a>
          </li>

          <li>
            <a href="/vender/productAdd">
              <span class="icon">
                <ion-icon name="chatbubble-outline"></ion-icon>
              </span>
              <span class="title">ProductAdd</span>
            </a>
          </li>

          <li>
            <a href="/vender/categorylist">
              <span class="icon">
                <ion-icon name="help-outline"></ion-icon>
              </span>
              <span class="title">Categorylist</span>
            </a>
          </li>

          <li>
            <a href="/vender/category">
              <span class="icon">
                <ion-icon name="settings-outline"></ion-icon>
              </span>
              <span class="title">Category</span>
            </a>
          </li>

          <li>
            <a href="/vender/subcategories">
              <span class="icon">
                <ion-icon name="lock-closed-outline"></ion-icon>
              </span>
              <span class="title">Subcategorylist</span>
            </a>
          </li>

          <li>
            <a href="/vender/logout">
              <span class="icon">
                <ion-icon name="log-out-outline"></ion-icon>
              </span>
              <span class="title">Sign Out</span>
            </a>
          </li>
        </ul>
      </div>

      <!-- ========================= Main ==================== -->


<style>
  .clr{
    background-color: rgb(198, 157, 231);
  }
  .edit{
    background-color: rgba(140, 142, 184, 0.921);
    margin-left: 650px;
    margin-top: -10px;
    border: rgb(221, 222, 221);
    
  }
</style>
<body class="clr">
    <title>Add Product</title>
        <link rel="stylesheet" href="productAdd.css">

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>







   {{#if prod }}

<form class="edit" action="/vender/edit-product/{{prod._id}}" method="POST">  

  <label for="productName">Product Name:</label>
  <input type="text" id="productName" name="productname" value="{{prod.productname}}" required>



  <label for="manufactureName">Manufacture Name:</label>
  <input type="text" id="manufactureName" name="manufacturename"  value="{{prod.manufacturename}}" required>
  <br>

    <br>
   


  <label for="manufactureBrand">Manufacture Brand:</label>
  <input type="text" id="manufactureBrand" name="brand"   value="{{prod.brand}}" required>


  <label for="size">size:</label>





  <label for="productPrice">Product Price:</label>
  <input type="number" id="productPrice" name="price" value="{{prod.price}}" required>

  <label for="productDescription">Product Description:</label>
  <textarea id="productDescription" name="description" value="{{prod.description}}" required></textarea>

{{!-- 
  <label for="productDescription">Product Description:</label>
  <textarea id="productDescription" name="description" required></textarea> --}}





      {{!-- ***************************************************** --}}
  <select id="size" name="size" required>
    {{#each newSize}}
      <option value="{{_id}}">{{title}}</option>
    {{/each}}
</select>
    <label for="color">color:</label>
  <select id="color" name="color" required>
    {{#each newColor}}
      <option value="{{_id}}">{{title}}</option>
    {{/each}}
</select>


 

  <label for="category">Category:</label>
  <select id="category" name="category" required>
    {{#each categories}}
      <option value="{{_id}}">{{title}}</option>
    {{/each}}
  </select>



     <label for="subcategory">SubCategory:</label>
  <select id="subcategory" name="subcategory" required>
    {{#each subcategories}}
      <option value="{{_id}}">{{title}}</option>
    {{/each}}



  </select>
  <label for="productCount">Product Count:</label>
  <input type="number" id="productCount" name="count" value="0"  value="{{prod.count}}" required>


 {{!-- <label for="image">Image:</label>
  <input type="file" id="image" name="image" accept="image/*" required>

  {{!-- <button type="button" id="uploadButton">Upload</button> --}}
  <button type="submit">Add Product</button>  --}}


</form>

{{/if}}


<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      const response = await axios.get('admin/categories');
      const categories = response.data.categories;

      if (categories.length) {
        const categorySelect = document.getElementById('category');

        categories.forEach(category => {
          const option = document.createElement('option');
          option.value = category._id;
          option.textContent = category.title;
          categorySelect.appendChild(option);
        });
      } else {
        console.error('No categories found.');
      }
    } catch (error) {
      console.error('Error fetching categories:', error.message);
    }
  });
</script>


<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      const responsed = await axios.get('admin/subcategory');
      const subcategories = responsed.data.subcategories;

      if (subcategories.length) {
        const subcategorySelect = document.getElementById('subcategory');

        subcategories.forEach(subcategory => {
          const option = document.createElement('option');
          option.value = subcategory._id;
          option.textContent = subcategory.title;
          
          subcategorySelect.appendChild(option);
        });
      } else {
        console.error('No subcategories found.');
      }
    } catch (error) {
      console.error('Error fetching subcategories:', error.message);
    }
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      const response = await axios.get('admin/color');
      const colors = response.data.newColor;

      if (colors.length) {
        const colorSelect = document.getElementById('color');

        colors.forEach(color => {
          const option = document.createElement('option');
          option.value = color._id;
          option.textContent = color.title;
          colorSelect.appendChild(option);
        });
      } else {
        console.error('No color found.');
      }
    } catch (error) {
      console.error('Error fetching color:', error.message);
    }
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      const responsed = await axios.get('admin/size');
      const sizes = responsed.data.newSize;

      if (sizes.length) {
        const sizeSelect = document.getElementById('size');

        sizes.forEach(size => {
          const option = document.createElement('option');
          option.value = size._id;
          option.textContent = size.title;  
          sizeSelect.appendChild(option);
        });
      } else {
        console.error('No size found.');
      }
    } catch (error) {
      console.error('Error fetching size:', error.message);
    }
  });
</script>

</body>
</html>